

needed_parameters(pickup_class,[Action,Object,Performer]).
preconditions(pickup_class,O,[can_pickup(O)]).
pickupable(cup_class).

movesomething(Move, MoveableObject) :-
	instance2(MoveableObject,moveableobject_class),
	pickup(_,MoveableObject,_).%then perform pickup action!

movesomething(Move, Fluid) :-
	instance2(Fluid,fluid_class),
	instance2(FluidHolder,fluidholder_class),
	holds(FluidHolder, Fluid),
	movesomething(Move, FluidHolder). %link same movement with both fluid and holder

object_to_grasp(GraspAction, Object) :-
	object_to_pickup(PickupAction, Object),
	has_content(instance2(PickupAction, pickup_class),[_,GraspAction,_]).

constraints(pickup_class) :-
	only_pickup_one.


only_pickup_one :-
	findall(Obj,object_to_pickup(A, Obj),Objects),
	length(Objects,Length),
	member(Length,[1,1]).


action_capabilities(pr2_class, [ action(name(pick_up),_,_)]).


has_clear_actionname(VagueGoal, instance2(M,Class)) :-
	%writeln(begin_action_search: VagueGoal),
	member2(instance2(M,Class),VagueGoal),
	Class \== action_class,
	is_subclass(Class, action_class). 

has_clear_performer(VagueGoal, instance2(P, PClass)) :-
	%writeln(begin_performer_search: VagueGoal),
	member2(instance2(P, PClass), VagueGoal),
	PClass \== actionperformer_class,
	is_subclass(PClass,  actionperformer_class).


remove_action([],[]).
remove_action([pickup(_,_,_)|R],R3) :-
	remove_action(R,R3).
remove_action([H|R],[H|R3]) :-
	remove_action(R,R3).

reach_goaltemp(near(O1,O2)) :-
	init,
	writeln(reach_neargoal),
	get_current_timestep(T),
	writeln(time: T),

	possible_actions(pr2_ca,L),

	T2 is T+1,
	%als niet near dan gaan we actie uitvoeren
	%stel o1 verplaatsen voorlopig
	%asserta(perform(action1,T)),
	sample_position_near(O2,X,Y,Z),
	asserta(distributionalclause(has_position(object1,T2),finite([1:(X,Y,Z)]),true,1)),
	%we kunnen afleiden dat het om een actie gaat die iets op een object doet => objectactedon
	%eventueel predicaat change(obj,T)
	asserta(distributionalclause(acts_on_object(action1),finite([1:object1]),true,1)),
	%distributionalclause:eval_query_backward_distrib([],[],(O1),(movedsomething(O1,T)~=true),100,Pc),
	
	%TODO TODO TODO actioncategory implementeren overal
	
	E = movedsomething(object1,T),
	/*
	findall((Cat2,Pc), (member(Cat2,L),asserta(distributionalclause(),true,1)), distributionalclause:eval_query_backward_distrib([],[],(Cat2,E),(has_category(action1)~=Cat2,has_effect(action1)~=E),1000,Pc)),L2),
	writeln(L2),	
	*/
	distributionalclause:eval_query_backward_distrib([],[],(Cat2,E),(actioncategory(action1)~=Cat2,has_effect(action1)~=E),100,P),
	writeln(P),

	/*
	Pc = [_:Cat],
	writeln(Cat),
	writeln(pc: Pc),
	%TODO connectie
	*/
	asserta(distributionalclause(has_performer(action1),finite([1:pr2robot1]),true,1)),
	asserta(distributionalclause(has_goallocation(action1),finite([1:(X,Y,Z)]),true,1)),
	asserta(distributionalclause(has_category(action1),finite([1:pickandplace_ca]),true,1)),

	retract(distributionalclause(has_position(object1,T2),finite([1:(X,Y,Z)]),true,1)),
	
	perform_action(action1),
	get_position(object1,1),
	get_position(object1content,1),
	break.

test :-
	init,
	asserta(perform(p1,0)),
	asserta(perform(p2,1)),
	asserta(distributionalclause(has_category(p1),finite([1:pickup_ca]),true,1)),
	asserta(distributionalclause(acts_on_object(p1,object1),finite([1:true]),true,1)),
	asserta(distributionalclause(has_category(p2),finite([1:pickup_ca]),true,1)),
	asserta(distributionalclause(acts_on_object(p2,object1),finite([1:true]),true,1)),
	
	asserta(distributionalclause(is_successfull(p1),finite([1:true]),true,1)),
	
	writeln(object1cont_position_t2),	
	distributionalclause:eval_query_backward_distrib([],[],(X222,Y222,Z222),(has_position(object1content,2)~= (X222,Y222,Z222)),1000,P33),
	writeln(P33),

	writeln(table_o1_pos_sample),	
	%,sample_uniform(0,100,XX),sample_uniform(0,50,YY),writeln(XX),writeln(YY),writeln(--)
	distributionalclause:eval_query_backward_distrib([],[],(XX,YY),(tableposnearobj(table1,object2,0)~=(XX,YY)),100,Pos),
	%distributionalclause:eval_query_backward_distrib([],[],(X,Y),(tableposnearobj(table1,object1,0)~=(XX,YY),X is integer(XX), Y is integer(YY),between(0,100,X),between(0,50,Y)),100,Pos),
	writeln(Pos),
	
	/*
	distributionalclause:eval_query_backward_distrib([],[],(XD),(near(object2,object3,0)~=XD),1000,P5),
	writeln(P5),

	writeln(--------------),
	writeln(o1_on_table_t0),
	distributionalclause:eval_query_backward_distrib([],[],(B1),(on(object1,table1,0)~=B1),1000,P7),
	writeln(P7),

	writeln(--------------),
	writeln(o1_on_table_t1),
	distributionalclause:eval_query_backward_distrib([],[],(B),(on(object1,table1,1)~=B),1000,P6),
	writeln(P6),
	
	writeln(--------------),
	writeln(o1cont_on_table_t0),
	distributionalclause:eval_query_backward_distrib([],[],(B11),(on(object1content,table1,0)~=B11),1000,P77),
	writeln(P77),

	writeln(--------------),
	writeln(o1cont_on_table_t1),
	distributionalclause:eval_query_backward_distrib([],[],(B2),(on(object1content,table1,1)~=B2),1000,P66),
	writeln(P66),

	sample(P5,S1),
	writeln(S1),	

	writeln(--------------),
	writeln(o1_find_near),
	%TODO distributionalclause:eval_query_backward_distrib([],[], (Xz,Yz,Zz), (has_position(OO,0)~=(Xz,Yz,Zz),near(object1,OO,0)~=true),1000,P8),
	%distributionalclause:eval_query_backward_distrib([],[], (Xz,Yz,Zz), (distance2(5,5,5,Xz,Yz,Zz,10)~=true),1000,P8),
	writeln(P8),	
	*/
	break.

test2 :-
	init,
	writeln(test_pickandplace),
	asserta(perform(pp1,0)),
	asserta(distributionalclause(has_category(pp1),finite([1:pickandplace_ca]),true,1)),
	asserta(distributionalclause(acts_on_object(pp1,object1),finite([1:true]),true,1)),
	asserta(distributionalclause(has_goallocation(pp1),finite([1:(42,25,55)]),true,1)),
	
	writeln(-),
	writeln(obj1_location_t0),
	distributionalclause:eval_query_backward_distrib([],[],(X,Y,Z),(has_position(object1,0)~=(X,Y,Z)),1000,P1), 
	writeln(P1),
	writeln(obj1cont_location_t0),
	distributionalclause:eval_query_backward_distrib([],[],(Xc,Yc,Zc),(has_position(object1content,0)~=(Xc,Yc,Zc)),1000,Pc), 
	writeln(Pc),
	writeln(-),

	writeln(obj1_location_t1),
	distributionalclause:eval_query_backward_distrib([],[],(X1,Y1,Z1),(has_position(object1,1)~=(X1,Y1,Z1)),1000,P2),
	writeln(P2),
	writeln(obj1cont_location_t1),
	distributionalclause:eval_query_backward_distrib([],[],(X1c,Y1c,Z1c),(has_position(object1content,1)~=(X1c,Y1c,Z1c)),1000,P1c), 
	writeln(P1c),
	writeln(-),

	writeln(evidence_pickplace_success),
	asserta(distributionalclause(is_successfull(pp1),finite([1:true]),true,1)),

	writeln(-),
	writeln(obj1_location_t1),
	distributionalclause:eval_query_backward_distrib([],[],(X1n,Y1n,Z1n),(has_position(object1,1)~=(X1n,Y1n,Z1n)),1000,P2n),
	writeln(P2n),
	writeln(obj1cont_location_t1),
	distributionalclause:eval_query_backward_distrib([],[],(X1cn,Y1cn,Z1cn),(has_position(object1content,1)~=(X1cn,Y1cn,Z1cn)),1000,P1cn), 
	writeln(P1cn),
	writeln(-),

	break.
